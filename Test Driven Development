Chai docs == http://chaijs.com/api/bdd/

http://chaijs.com/api/bdd/

Mocha - runs test and shows output

two parts two a test:
    describe and it
    describe is a section
    it is a bullet point
    
hooks 
    allows you to modify state before, after, and beforeEach/afterEach function
    
"watch"
    mocha --watch 
        reruns when files are changed
        
        
Chai - assertion library "is this really equal to this"
    "should"
    "expect"
        "expect" works on values that may be undefined unlike the "should" property
        expect() allows us to pass in a string to help tests easier to understand at a glance
        
Language Chains - Chai allows you to chain words together
    expect(1).to.equal(1)
    expect(1).equal(1)
    
Equality with Objects and Arrays

{name: "Mocha"} === { name: "Mocha"}
>>false
[1,2,3] === [1,2,3]
>>false

deep.equal allows you to look inside the objects and arrays
var myObject = { name: "mocha"}
expect(myObject).to.deep.equal({ name: "Mocha"});

Test Driven Development - unit tests to check functionality of modules and classes
    does the logic work, do the functions work?

Behavior Driven Development - does it act how you expect it to work? 
    does the button click take you to the right page
    




Starting a new NPM project in a directory

"npm init"  ---- initialize new package.json 
"npm install --save-dev mocha chai"  install as dev dependencies, not as live deployment
    --save <--- this would be for normal deployed dependencies
"git init" --- start a git repo to track files
"touch .gitignore" --- setup a git ignore file, then add node_modules to it

open package.json and in the file:
    "scripts":{ "test":"mocha -R spec --bail --watch" }

check out the example tests and code here- https://github.com/KahunaCode/mocha-chai-example




How to make tests run in the browser ===============
https://mochajs.org/#running-mocha-in-the-browser

in script tag:
add a "mocha" div...
source the script to test...
import mocha and chai...
then mocha.setup('bdd')...
then import the spec ...

    <body>
      <div id="mocha"></div>

      <script src="human.js"></script>

      <script src="node_modules/mocha/mocha.js"></script>
      <script src="node_modules/chai/chai.js"></script>

      <script>
        mocha.setup('bdd');
      </script>
      <script src="test/human.spec.js"></script>

      <script>
        mocha.run();
      </script>
    </body

    
    
    